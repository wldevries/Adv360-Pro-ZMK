/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        word_navigation: word_navigation {
            compatible = "zmk,behavior-mod-morph";
            label = "WORD_NAVIGATION";
            bindings = <&kp LC(RIGHT)>, <&kp LC(LEFT)>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        tap_dance_lshift: tap_dance_lshift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LSHIFT";
            #binding-cells = <0>;
            bindings =
                <&mt LEFT_SHIFT LEFT_PARENTHESIS>,
                <&kp LEFT_BRACE>,
                <&kp LEFT_BRACKET>;

            tapping-term-ms = <200>;
        };

        tap_dance_rshift: tap_dance_rshift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_RSHIFT";
            #binding-cells = <0>;
            bindings =
                <&mt RSHIFT RIGHT_PARENTHESIS>,
                <&kp RIGHT_BRACE>,
                <&kp RIGHT_BRACKET>;

            tapping-term-ms = <200>;
        };

        ht_hold_preferred: ht_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_HOLD_PREFERRED";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ht_lshift: ht_lshift {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_LSHIFT";
            bindings = <&kp>, <&tap_dance_lshift>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ht_rshift: ht_rshift {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_RSHIFT";
            bindings = <&kp>, <&tap_dance_rshift>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&kp EQUAL   &kp N1          &kp N2          &kp N3              &kp N4            &kp N5  &tog 3                                                               &mo 5      &kp N6  &kp N7             &kp N8              &kp N9           &kp N0                   &kp MINUS
&kp TAB     &kp Q           &kp W           &kp E               &kp R             &kp T   &tog 1                                                               &tog 2     &kp Y   &kp U              &kp I               &kp O            &kp P                    &kp BSLH
&kp ESCAPE  &hm LEFT_WIN A  &hm LEFT_ALT S  &hm LEFT_CONTROL D  &hm LEFT_SHIFT F  &kp G   &tog 6    &kp LEFT_CONTROL  &kp RIGHT_ALT      &kp LGUI   &kp RCTRL  &none      &kp H   &hm RIGHT_SHIFT J  &hm LEFT_CONTROL K  &hm RIGHT_ALT L  &hm RIGHT_WIN SEMICOLON  &kp SQT
&kp LSHFT   &kp Z           &kp X           &kp C               &kp V             &kp B                               &kp HOME           &kp PG_UP                        &kp N   &kp M              &kp COMMA           &kp DOT          &kp FSLH                 &kp RSHFT
&mo 4       &kp GRAVE       &caps_word      &kp LEFT            &kp RIGHT                 &kp BSPC  &kp DEL           &kp END            &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP             &kp DOWN            &kp LBKT         &kp RBKT                 &mo 4
            >;
        };

        dvorak {
            bindings = <
&kp EQUAL           &kp N1          &kp N2          &kp N3              &kp N4            &kp N5  &trans                                                                    &trans     &kp N6  &kp N7             &kp N8               &kp N9           &kp N0           &kp MINUS
&kp TAB             &kp SQT         &kp COMMA       &kp DOT             &kp P             &kp Y   &trans                                                                    &trans     &kp F   &kp G              &kp C                &kp R            &kp L            &kp SLASH
&kp ESCAPE          &hm LEFT_WIN A  &hm LEFT_ALT O  &hm LEFT_CONTROL E  &hm LEFT_SHIFT U  &kp I   &trans         &kp LEFT_CONTROL  &kp RIGHT_ALT      &kp LGUI   &kp RCTRL  &trans     &kp D   &hm RIGHT_SHIFT H  &hm RIGHT_CONTROL T  &hm RIGHT_ALT N  &hm RIGHT_WIN S  &kp BACKSLASH
&ht_lshift LSHFT 0  &kp SEMICOLON   &kp Q           &kp J               &kp K             &kp X                                    &kp HOME           &kp PG_UP                        &kp B   &kp M              &kp W                &kp V            &kp Z            &ht_rshift RSHFT 0
&mo 4               &kp GRAVE       &caps_word      &kp LEFT            &kp RIGHT                 &kp BACKSPACE  &kp DEL           &kp END            &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP             &kp DOWN             &kp LBKT         &kp RBKT         &mo 4
            >;
        };

        games {
            bindings = <
&kp ESC    &kp N1            &kp N2     &kp N3     &kp N4        &kp N5  &kp N6                                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp Q             &kp W      &kp E      &kp R         &kp T   &kp Y                                                       &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp CAPS   &kp A             &kp S      &kp D      &kp F         &kp G   &kp I      &kp LSHFT  &kp LEFT_SHIFT        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp Z             &kp X      &kp C      &kp V         &kp B                         &kp LEFT_CONTROL      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&mo 4      &kp LEFT_CONTROL  &kp MINUS  &kp EQUAL  &kp LEFT_ALT          &kp SPACE  &kp ENTER  &kp LEFT_ALT          &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &trans  &trans  &trans  &trans  &trans  &trans                                      &mo 5   &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&trans     &trans  &trans  &trans  &trans  &trans  &trans                                      &none   &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&trans     &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
&trans     &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans     &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans      &trans        &kp KP_DOT     &trans           &trans
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &trans                                      &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_navigation {
            bindings = <
&trans  &trans        &trans            &trans            &trans          &trans  &trans                                      &trans  &trans  &trans          &trans        &trans         &trans     &kp C_MUTE
&trans  &trans        &word_navigation  &trans            &trans          &trans  &trans                                      &trans  &trans  &kp HOME        &kp PAGE_UP   &kp PAGE_DOWN  &kp END    &kp C_VOL_UP
&trans  &kp LEFT_WIN  &kp LEFT_ALT      &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN       &kp RIGHT  &kp C_VOL_DN
&trans  &kp LC(Z)     &kp LC(X)         &kp LC(C)         &kp LC(V)       &trans                  &trans      &trans                  &trans  &trans          &trans        &trans         &trans     &kp C_PLAY_PAUSE
&trans  &trans        &trans            &trans            &trans                  &trans  &trans  &trans      &trans  &trans  &trans          &trans          &trans        &trans         &trans     &trans
            >;
        };
    };
};
